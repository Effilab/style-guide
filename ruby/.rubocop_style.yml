Style/IndentationWidth:
  Enabled: true
  # Number of spaces for each indentation level
  Width: 2

Style/AccessModifierIndentation:
  Enabled: true
  EnforcedStyle: indent
  # By default, the indentation width from Style/IndentationWidth is used
  # But it can be overridden by setting this parameter
  IndentationWidth: ~

Style/AccessorMethodName:
  Enabled: true

Style/Alias:
  Enabled: true
  EnforcedStyle: prefer_alias_method

Style/AlignArray:
  # needs autocorrection
  Enabled: true

Style/AlignHash:
  # needs autocorrection
  EnforcedHashRocketStyle: table
  EnforcedColonStyle: table
  EnforcedLastArgumentHashStyle: always_inspect

Style/AlignParameters:
  Enabled: true
  EnforcedStyle: with_first_parameter

Style/AndOr:
  EnforcedStyle: always

Style/AnnotationComment:
  Enabled: true
  Keywords:
    - TODO
    - FIXME
    - OPTIMIZE
    - HACK

Style/ArrayJoin:
  Enabled: true

Style/AsciiComments:
  Enabled: true

Style/AsciiIdentifiers:
  Enabled: true

Style/Attr:
  Enabled: true

Style/BeginBlock:
  Enabled: true

Style/BlockComments:
  Enabled: true

Style/BlockNesting:
  Enabled: true

Style/Blocks:
  Enabled: true

Style/BracesAroundHashParameters:
  Enabled: true
  EnforcedStyle: context_dependent

Style/CaseEquality:
  Enabled: false

Style/CaseIndentation:
  Enabled: true
  IndentWhenRelativeTo: case
  IndentOneStep: false

Style/CharacterLiteral:
  Enabled: true

Style/ClassAndModuleCamelCase:
  Enabled: true

Style/ClassAndModuleChildren:
  Enabled: true
  EnforcedStyle: nested

Style/ClassLength:
  Enabled: true
  CountComments: false
  Max: 100

Style/ClassMethods:
  Enabled: true

Style/ClassVars:
  Enabled: true


Style/CollectionMethods:
  Enabled: true
 # Mapping from undesired method to desired_method
 # e.g. to use `detect` over `find`:
 #
 # CollectionMethods:
 #   PreferredMethods:
 #     find: detect
  PreferredMethods:
    collect: 'map'
    collect!: 'map!'
    inject: 'reduce'
    detect: 'find'
    find_all: 'select'

Style/ColonMethodCall:
  Enabled: true

Style/ConstantName:
  Enabled: true

Style/CyclomaticComplexity:
  Enabled: true

Style/DefWithParentheses:
  Enabled: true

Style/DeprecatedHashMethods:
  Enabled: true

Style/Documentation:
  Enabled: true

Style/DotPosition:
  Enabled: true
  EnforcedStyle: leading

Style/DoubleNegation:
  Enabled: true

Style/EmptyLineBetweenDefs:
  Enabled: true
  # If true, this parameter means that single line method definitions don't
  # need an empty line between them.
  AllowAdjacentOneLineDefs: false

Style/EmptyLines:
  # 2 lines offset
  Enabled: true

Style/EmptyLinesAroundAccessModifier:
  Enabled: true

Style/EmptyLinesAroundBody:
  Enabled: false

Style/EmptyLiteral:
  Enabled: true

Style/Encoding:
  Enabled: false

Style/EndBlock:
  Enabled: true

Style/EndOfLine:
  Enabled: true

Style/EvenOdd:
  Enabled: true

Style/FileName:
  Enabled: true
  # File names listed in AllCops:Include are excluded by default. Add extra
  # excludes here.
  Exclude: []
  # When true, requires that each source file should define a class or module
  # with a name which matches the file name (converted to ... case).
  # It further expects it to be nested inside modules which match the names
  # of subdirectories in its path.
  ExpectMatchingDefinition: false
  # If non-nil, expect all source file names to match the following regex.
  # Only the file name itself is matched, not the entire file path.
  # Use anchors as necessary if you want to match the entire name rather than
  # just a part of it.
  Regex: ~
  # With `IgnoreExecutableScripts` set to `true`, this cop does not
  # report offending filenames for executable scripts (i.e. source
  # files with a shebang in the first line).
  IgnoreExecutableScripts: true

Style/FinalNewline:
  Enabled: true

Style/FlipFlop:
  Enabled: true

Style/For:
  Enabled: true
  EnforcedStyle: each

Style/FormatString:
  Enabled: true
  EnforcedStyle: format

Style/GlobalVars:
  Enabled: true
  AllowedVariables: [$quiet, $shutdown]

Style/GuardClause:
  Enabled: true
  MinBodyLength: 1

Style/HashSyntax:
  Enabled: true
  EnforcedStyle: ruby19_no_mixed_keys
  # Force hashes that have a symbol value to use hash rockets
  UseHashRocketsWithSymbolValues: false
  # Do not suggest { a?: 1 } over { :a? => 1 } in ruby19 style
  PreferHashRocketsForNonAlnumEndingSymbols: false

Style/IfUnlessModifier:
  Enabled: true
  MaxLineLength: 120

Style/IfWithSemicolon:
  Enabled: false

Style/IndentArray:
  Enabled: true
  EnforcedStyle: special_inside_parentheses
  IndentationWidth: ~

Style/IndentHash:
  Enabled: true
  EnforcedStyle: special_inside_parentheses
  IndentationWidth: ~

Style/IndentationConsistency:
  Enabled: true
  EnforcedStyle: rails

Style/Lambda:
  Enabled: true
  EnforcedStyle: literal

Style/LambdaCall:
  Enabled: true
  EnforcedStyle: call

Style/LeadingCommentSpace:
  Enbalde: true

Style/LineEndConcatenation:
  Enabled: true

Style/LineLength:
  Enabled: true
  MaxLineLength: 120

Style/MethodCallParentheses:
  Enabled: true

Style/MethodCalledOnDoEndBlock:
  Enabled: true

Style/MethodDefParentheses:
  Enabled: true

Style/MethodName:
  Enabled: true
  EnforcedStyle: snake_case

Style/ModuleFunction:
  Enabled: true

Style/MultilineBlockChain:
  Enabled: true

Style/MultilineIfThen:
  Enabled: true

Style/MultilineTernaryOperator:
  Enabled: true

Style/NegatedIf:
  Enabled: true

Style/NegatedWhile:
  Eanbled: true

Style/NestedTernaryOperator:
  Enabled: true

Style/NilComparison:
  Enabled: true

Style/NonNilCheck:
  Enabled: true
  IncludeSemanticChanges: false

Style/Not:
  Enabled: true

Style/NumericLiterals:
  Enabled: true
  MinDigits: 5

Style/OneLineConditional:
  Enabled: true

Style/OpMethod:
  Eanbled: true

Style/ParameterLists:
  Enabled: true
  Max: 5
  CountKeywordArgs: true

Style/ParenthesesAroundCondition:
  Enabled: true
  AllowSafeAssignment: false

Style/PercentLiteralDelimiters:
  Enabled: true
  PreferredDelimiters:
    '%':  ()
    '%i': ()
    '%I': ()
    '%q': ()
    '%Q': ()
    '%r': ()
    '%s': ()
    '%w': ()
    '%W': ()
    '%x': ()

Style/PerlBackrefs:
  Enabled: true

Style/PredicateName:
  Eanbled: true
  # Predicate name prefixes.
  NamePrefix:
    - is_
    - has_
    - have_
  # Predicate name prefixes that should be removed.
  NamePrefixBlacklist:
    - is_
    - has_
    - have_
  # Predicate names which, despite having a blacklisted prefix, or no ?,
  # should still be accepted
  NameWhitelist:
    - is_a?
  # Exclude Rspec specs because there is a strong convetion to write spec
  # helpers in the form of `have_something` or `be_something`.
  Exclude:
    - 'spec/**/*'

Style/Proc:
  Eanbled: true

Style/RaiseArgs:
  Eanbled: true
  EnforcedStyle: exploded

Style/RedundantBegin:
  Enabled: true

Style/RedundantException:
  Enabled: true

Style/RedundantReturn:
  Enabled: true
  AllowMultipleReturnValues: false

Style/RedundantSelf:
  Enabled: true

Style/RegexpLiteral:
  Enabled: false

Style/RescueModifier:
  Enabled: true

Style/SelfAssignment:
  Enabled: true

Style/Semicolon:
  Enabled: true
  # Allow ; to separate several expressions on the same line.
  AllowAsExpressionSeparator: false

Style/SignalException:
  Enabled: true
  EnforcedStyle: only_raise

Style/SingleLineBlockParams:
  Enabled: false

Style/SingleLineMethods:
  Enabled: false

Style/SingleSpaceBeforeFirstArg:
  Eanbled: true

Style/SpaceAfterColon:
  Enabled: true

Style/SpaceAfterComma:
  Enabled: true

Style/SpaceAfterControlKeyword:
  Enabled: true

Style/SpaceAfterMethodName:
  Enabled: true

Style/SpaceAfterNot:
  Enabled: true

Style/SpaceAfterSemicolon:
  Enabled: true

Style/SpaceAroundEqualsInParameterDefault:
  Enabled: true

Style/SpaceAroundOperators:
  Enabled: true
  # When true, allows most uses of extra spacing if the intent is to align
  # with an operator on the previous or next line, not counting empty lines
  # or comment lines.
  AllowForAlignment: true

Style/SpaceBeforeBlockBraces:
  Enabled: true

Style/SpaceBeforeModifierKeyword:
  Enabled: true

Style/SpaceInsideBlockBraces:
  Enabled: true

Style/SpaceInsideBrackets:
  Enabled: true

Style/SpaceInsideHashLiteralBraces:
  Enabled: true
  EnforcedStyle: space
  EnforcedStyleForEmptyBraces: no_space

Style/SpaceInsideParens:
  Enabled: true

Style/SpecialGlobalVars:
  Enabled: true
  EnforcedStyle: use_english_names

Style/StringLiterals:
  EnforcedStyle: single_quotes
  ConsistentQuotesInMultiline: false

Style/SymbolArray:
  Eanbled: true
  EnforcedStyle: percent

Style/Tab:
  Enabled: true

Style/TrailingBlankLines:
  Enabled: true
  EnforcedStyle: final_newline

Style/TrailingComma:
  Enabled: true
  EnforcedStyle: consistent_coma

Style/TrailingWhitespace:
  Enabled: true

Style/UnlessElse:
  Enabled: true

Style/VariableInterpolation:
  Enabled: true

Style/VariableName:
  Enabled: true
  EnforcedStyle: snake_case

Style/WhenThen:
  Enabled: true

Style/WhileUntilDo:
  Enabled: true

Style/WhileUntilModifier:
  MaxLineLength: 120

Style/WordArray:
  EnforcedStyle: percent
  SupportedStyles:
  # The MinSize option causes the WordArray rule to be ignored for arrays
  # smaller than a certain size.  The rule is only applied to arrays
  # whose element count is greater than or equal to MinSize.
  MinSize: 1
